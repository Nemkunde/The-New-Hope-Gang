{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekstr\\\\Documents\\\\GitHub\\\\The-New-Hope-Gang\\\\my-app\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Data from '../components/Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getFilterList = (searchData, categoryList) => {\n  if (!searchData) {\n    return categoryList;\n  }\n  return categoryList.filter(character => character.name.toLowerCase().includes(searchData.toLowerCase()));\n};\nconst HomePage = () => {\n  _s();\n  const [categoryList, setCategoryList] = useState([]);\n  const [searchData, setSearchData] = useState('');\n  const [clickedName, setclickedname] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [category, setCategory] = useState(['people', 'films', 'vehicles', 'starships', 'species', 'planets']);\n  const [categoryListPos, setCategoryListPos] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await fetch('https://swapi.dev/api/' + category[categoryListPos]);\n      let data = await response.json();\n      let resultsDataList = data.results;\n      while (data.next != null) {\n        response = await fetch(data.next);\n        data = await response.json();\n        resultsDataList = resultsDataList.concat(data.results);\n      }\n      setCategoryList(resultsDataList);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [categoryListPos]);\n  const filterList = getFilterList(searchData, categoryList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchNBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"categoryTitle\",\n          children: category[categoryListPos]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          className: \"search\",\n          value: searchData,\n          onChange: e => setSearchData(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnB\",\n          onClick: () => {\n            setSearchData('');\n            setclickedname('');\n            let nextpos = categoryListPos - 1;\n            if (nextpos == -1) {\n              setCategoryListPos(5);\n            } else {\n              setCategoryListPos(nextpos);\n            }\n            setIsLoading(true);\n          },\n          children: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnN\",\n          onClick: () => {\n            setSearchData('');\n            setclickedname('');\n            let nextpos = categoryListPos + 1;\n            if (nextpos == 6) {\n              setCategoryListPos(0);\n            } else {\n              setCategoryListPos(nextpos);\n            }\n            setIsLoading(true);\n          },\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"categoryNamesList\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"categoryNamesList\",\n        children: filterList.map(result => {\n          if (category[categoryListPos] == 'films') {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setclickedname(result.title),\n                children: result.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)\n            }, result.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setclickedname(result.name),\n                children: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)\n            }, result.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), clickedName !== '' && /*#__PURE__*/_jsxDEV(Data, {\n        name: clickedName,\n        category: category[categoryListPos]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(HomePage, \"czgOayh3o3ULvTn19D6eHM0c18Q=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Data","getFilterList","searchData","categoryList","filter","character","name","toLowerCase","includes","HomePage","setCategoryList","setSearchData","clickedName","setclickedname","isLoading","setIsLoading","category","setCategory","categoryListPos","setCategoryListPos","fetchData","response","fetch","data","json","resultsDataList","results","next","concat","filterList","e","target","value","nextpos","map","result","title"],"sources":["C:/Users/ekstr/Documents/GitHub/The-New-Hope-Gang/my-app/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Data from '../components/Data'\r\nconst getFilterList = (searchData, categoryList) =>{\r\n    if (!searchData){ \r\n        return categoryList;\r\n    }\r\n    return categoryList.filter((character) => character.name.toLowerCase().includes(searchData.toLowerCase()));\r\n}\r\nconst HomePage = () => {\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [searchData, setSearchData] = useState('')\r\n    const [clickedName, setclickedname] = useState('')\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [category, setCategory] = useState(['people', 'films', 'vehicles', 'starships', 'species', 'planets'])\r\n    const [categoryListPos, setCategoryListPos] = useState(0)\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let response = await fetch('https://swapi.dev/api/' + category[categoryListPos]);\r\n            let data = await response.json();\r\n            let resultsDataList = data.results\r\n            while(data.next != null){\r\n                response = await fetch(data.next);\r\n                data = await response.json();\r\n                resultsDataList = resultsDataList.concat(data.results)\r\n            }\r\n\r\n            setCategoryList(resultsDataList)\r\n            setIsLoading(false);\r\n        };\r\n        fetchData();\r\n    }, [categoryListPos]);\r\n    \r\n    const filterList = getFilterList(searchData, categoryList)\r\n    return <>\r\n        <div className=\"allContent\">\r\n            <div className=\"searchNBtn\">\r\n            <h1 className=\"categoryTitle\">{category[categoryListPos]}</h1>\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"Search...\" \r\n            className=\"search\" \r\n            value={searchData} \r\n            onChange={(e) => setSearchData(e.target.value)}\r\n            />\r\n            <button className='btnB' onClick={() => {\r\n                setSearchData('')\r\n                setclickedname('')\r\n                let nextpos = categoryListPos - 1;\r\n                if(nextpos == -1){\r\n                    setCategoryListPos(5)\r\n                } else{\r\n                    setCategoryListPos(nextpos)\r\n                }\r\n                setIsLoading(true);\r\n            }}>back</button>\r\n\r\n            <button className='btnN' onClick={() => {\r\n                setSearchData('')\r\n                setclickedname('')\r\n                let nextpos = categoryListPos + 1;\r\n                if(nextpos == 6){\r\n                    setCategoryListPos(0)\r\n                } else{\r\n                    setCategoryListPos(nextpos)\r\n                }\r\n                setIsLoading(true);\r\n            }}>next</button>\r\n            </div>\r\n            {isLoading ? <p className='categoryNamesList'>Loading...</p> : (\r\n                <ul className='categoryNamesList'>\r\n                    {filterList.map(result => {\r\n                        if(category[categoryListPos] == 'films'){\r\n                            return (\r\n                                <li key={result.name}>\r\n                                    <button onClick={() => setclickedname(result.title)}>{result.title}</button>\r\n                                </li>\r\n                            );\r\n                        }\r\n                        else{\r\n                            return (\r\n                                <li key={result.name}>\r\n                                    <button onClick={() => setclickedname(result.name)}>{result.name}</button>\r\n                                </li>\r\n                            );\r\n                        }\r\n                        \r\n                    })}\r\n                </ul>\r\n                )\r\n            }\r\n            \r\n            {clickedName !== '' &&\r\n                <Data name={clickedName} category={category[categoryListPos]}></Data>\r\n            }\r\n        </div>\r\n    </>;\r\n};\r\n\r\nexport default HomePage;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}