[{"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\index.js":"1","C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\App.js":"2","C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\HomePage.js":"3","C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\Notfound.js":"4","C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\Layout.js":"5","C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\components\\Data.js":"6","C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\NotFound.js":"7"},{"size":305,"mtime":1675435060167,"results":"8","hashOfConfig":"9"},{"size":477,"mtime":1675436828352,"results":"10","hashOfConfig":"9"},{"size":3904,"mtime":1675434411497,"results":"11","hashOfConfig":"9"},{"size":158,"mtime":1675436828358,"results":"12","hashOfConfig":"9"},{"size":479,"mtime":1675436828356,"results":"13","hashOfConfig":"9"},{"size":7647,"mtime":1675436828354,"results":"14","hashOfConfig":"9"},{"size":158,"mtime":1675436828358,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bncdfz",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\index.js",[],[],"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\App.js",[],[],"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\HomePage.js",["37","38","39","40","41"],[],"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\Notfound.js",[],[],"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\Layout.js",[],[],"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\components\\Data.js",["42"],[],"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\NotFound.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":14,"column":22,"nodeType":"45","messageId":"46","endLine":14,"endColumn":33},{"ruleId":"47","severity":1,"message":"48","line":31,"column":8,"nodeType":"49","endLine":31,"endColumn":25,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":49,"column":28,"nodeType":"53","messageId":"54","endLine":49,"endColumn":30},{"ruleId":"51","severity":1,"message":"52","line":61,"column":28,"nodeType":"53","messageId":"54","endLine":61,"endColumn":30},{"ruleId":"51","severity":1,"message":"52","line":72,"column":54,"nodeType":"53","messageId":"54","endLine":72,"endColumn":56},{"ruleId":"47","severity":1,"message":"55","line":14,"column":16,"nodeType":"56","endLine":14,"endColumn":28},"no-unused-vars","'setCategory' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assignments to the 'list' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression",{"desc":"58","fix":"59"},"Update the dependencies array to be: [category, categoryListPos]",{"range":"60","text":"61"},[1352,1369],"[category, categoryListPos]"]