[{"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\index.js":"1","C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\App.js":"2","C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\HomePage.js":"3","C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\components\\Data.js":"4"},{"size":305,"mtime":1675435060167,"results":"5","hashOfConfig":"6"},{"size":479,"mtime":1675432707574,"results":"7","hashOfConfig":"6"},{"size":3904,"mtime":1675432723717,"results":"8","hashOfConfig":"6"},{"size":7649,"mtime":1675432707575,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bncdfz",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\index.js",[],[],"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\App.js",[],[],"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\pages\\HomePage.js",["22","23","24","25","26"],[],"C:\\Users\\ekstr\\Documents\\GitHub\\The-New-Hope-Gang\\my-app\\src\\components\\Data.js",["27"],[],{"ruleId":"28","severity":1,"message":"29","line":14,"column":22,"nodeType":"30","messageId":"31","endLine":14,"endColumn":33},{"ruleId":"32","severity":1,"message":"33","line":31,"column":8,"nodeType":"34","endLine":31,"endColumn":25,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":49,"column":28,"nodeType":"38","messageId":"39","endLine":49,"endColumn":30},{"ruleId":"36","severity":1,"message":"37","line":61,"column":28,"nodeType":"38","messageId":"39","endLine":61,"endColumn":30},{"ruleId":"36","severity":1,"message":"37","line":72,"column":54,"nodeType":"38","messageId":"39","endLine":72,"endColumn":56},{"ruleId":"32","severity":1,"message":"40","line":14,"column":16,"nodeType":"41","endLine":14,"endColumn":28},"no-unused-vars","'setCategory' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["42"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assignments to the 'list' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression",{"desc":"43","fix":"44"},"Update the dependencies array to be: [category, categoryListPos]",{"range":"45","text":"46"},[1352,1369],"[category, categoryListPos]"]